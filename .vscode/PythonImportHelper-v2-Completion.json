[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "glob",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "glob",
        "description": "glob",
        "detail": "glob",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "colored",
        "importPath": "termcolor",
        "description": "termcolor",
        "isExtraImport": true,
        "detail": "termcolor",
        "documentation": {}
    },
    {
        "label": "banner",
        "kind": 2,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "def banner(): #Fancy banner for the tool\n    print(colored(\"\\nFuriousRecon - @n1c_Fury\", 'yellow', attrs=['bold']))\n    print(colored(\"Usage: ./recon.sh <ip> <name>\", 'blue'))\n    print(colored(\"github.com/n1cfury/FuriousRecon\\n\", 'yellow'))\ndef usage(): #Prints usage of the tool\n    print (colored(\"Usage: ./furiousrecon.sh <ip address> <target name>\", 'yellow'))\n    sys.exit()\ndef html_code():    #The HTML page for your report\n    with open(tfolder+\"-report.html\", \"w\") as file:\n        file.write(\"<!DOCTYPE html>\\n\")",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "usage",
        "kind": 2,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "def usage(): #Prints usage of the tool\n    print (colored(\"Usage: ./furiousrecon.sh <ip address> <target name>\", 'yellow'))\n    sys.exit()\ndef html_code():    #The HTML page for your report\n    with open(tfolder+\"-report.html\", \"w\") as file:\n        file.write(\"<!DOCTYPE html>\\n\")\n        file.write(\"<html>\\n\")\n        file.write(\"<title>[*] Host Report for \"+tfolder+\" [*]</title>\\n\")\n        file.write(\"<body>\\n\")\n        file.write(\"<h2 align='center''><b>[*]'+tfolder+' - '+thost+' [*]</h></bold>\\n\")",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "html_code",
        "kind": 2,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "def html_code():    #The HTML page for your report\n    with open(tfolder+\"-report.html\", \"w\") as file:\n        file.write(\"<!DOCTYPE html>\\n\")\n        file.write(\"<html>\\n\")\n        file.write(\"<title>[*] Host Report for \"+tfolder+\" [*]</title>\\n\")\n        file.write(\"<body>\\n\")\n        file.write(\"<h2 align='center''><b>[*]'+tfolder+' - '+thost+' [*]</h></bold>\\n\")\n        file.write(\"<nav>\\n\")\n        file.write(\"<h3 align='center'>\\n\")\n        file.write(\"<a href='nmap-output/ippsec.html' target='iframe_a'>IppSec</a>\\n\")",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "staging",
        "kind": 2,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "def staging(): #Make target folders and files, and change directory into target folder\n    os.mkdir(tfolder)\n    os.mkdir(tfolder + '/' + 'nmap-output')\n    os.mkdir(tfolder + '/' + 'images')\n    os.mkdir(tfolder + '/' + 'tools')\n    os.chdir(tfolder)\n    print (\"[+] Working Directories created\")\n    print(\"[+] Current working directory is: \" + os.getcwd())\n    html_code()\n    print (\"[+] HTML page created: \")",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "recon",
        "kind": 2,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "def recon(): #Runs nmap scans\n    print (colored(\"Recon has started on: \"+ date_time,'green'))\n    for scan in scans:\n        os.system(scan + ' ' + thost) #runs each scan against the host\n        time.sleep(5)\n    for sname in snames:\n        os.system(f\"xsltproc nmap-output/\"+scan+\".xml -o nmap-output/\"+scan+\".html\")\ndef report(): #Writes txt file report of initial findings\n    os.system('cat nmap-output/allports.nmap |grep \"/\" |cut -d \" \" -f 1 > portlist.txt\\n')\n    os.system('cat nmap-output/udp.nmap |grep \"/\" |cut -d \" \" -f 1 >> portlist.txt') ",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "report",
        "kind": 2,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "def report(): #Writes txt file report of initial findings\n    os.system('cat nmap-output/allports.nmap |grep \"/\" |cut -d \" \" -f 1 > portlist.txt\\n')\n    os.system('cat nmap-output/udp.nmap |grep \"/\" |cut -d \" \" -f 1 >> portlist.txt') \n    with open(\"report.txt\", \"w\") as file:\n        file.write(tfolder +\" - \"+ thost)\n        file.write(\"[+] TCP/UDP Ports:\\n\")        \n        os.system(\"cat portlist.txt |sort -n |uniq >> \"+tfolder+\"-report.txt\\n\")\n        file.write(\"[+] Web Recon (directories, robots.txt, etc)\\n\")\n        file.write(\"[+] Attack Surface (Versions and searchsploit findings)\\n\")\n        file.write(\"[+] Steps to getting a shell\\n\")",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "thost",
        "kind": 5,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "thost = (sys.argv(1)) #target host\ntfolder = (sys.argv(2)) #target folder\nnow = datetime.datetime.now()\ndate_time = now.strftime(\"%B %d %Y %H:%M:%S\") #Time check\n#Nmap scans\nipc='nmap -sC -sV -oA nmap-output/ippsec'\nall='nmap -Pn -p- -v -v --open -oA nmap-output/allports'\nsvc='nmap --open -O -sV -T4 -A -v -v -Pn -oA nmap-output/service'\nenm='nmap -Pn -T4 -A -v -v --script=*vuln* -oA nmap-output/vulns'\nvln='nmap -Pn -T4 -v -v --script=*enum* -oA nmap-output/enum'",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "tfolder",
        "kind": 5,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "tfolder = (sys.argv(2)) #target folder\nnow = datetime.datetime.now()\ndate_time = now.strftime(\"%B %d %Y %H:%M:%S\") #Time check\n#Nmap scans\nipc='nmap -sC -sV -oA nmap-output/ippsec'\nall='nmap -Pn -p- -v -v --open -oA nmap-output/allports'\nsvc='nmap --open -O -sV -T4 -A -v -v -Pn -oA nmap-output/service'\nenm='nmap -Pn -T4 -A -v -v --script=*vuln* -oA nmap-output/vulns'\nvln='nmap -Pn -T4 -v -v --script=*enum* -oA nmap-output/enum'\nudp='nmap -Pn -T4 -sS -sU -v -v -oA nmap-output/udp'",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "now",
        "kind": 5,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "now = datetime.datetime.now()\ndate_time = now.strftime(\"%B %d %Y %H:%M:%S\") #Time check\n#Nmap scans\nipc='nmap -sC -sV -oA nmap-output/ippsec'\nall='nmap -Pn -p- -v -v --open -oA nmap-output/allports'\nsvc='nmap --open -O -sV -T4 -A -v -v -Pn -oA nmap-output/service'\nenm='nmap -Pn -T4 -A -v -v --script=*vuln* -oA nmap-output/vulns'\nvln='nmap -Pn -T4 -v -v --script=*enum* -oA nmap-output/enum'\nudp='nmap -Pn -T4 -sS -sU -v -v -oA nmap-output/udp'\nscans = [ipc,all,svc,enm,vln,udp]",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "date_time",
        "kind": 5,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "date_time = now.strftime(\"%B %d %Y %H:%M:%S\") #Time check\n#Nmap scans\nipc='nmap -sC -sV -oA nmap-output/ippsec'\nall='nmap -Pn -p- -v -v --open -oA nmap-output/allports'\nsvc='nmap --open -O -sV -T4 -A -v -v -Pn -oA nmap-output/service'\nenm='nmap -Pn -T4 -A -v -v --script=*vuln* -oA nmap-output/vulns'\nvln='nmap -Pn -T4 -v -v --script=*enum* -oA nmap-output/enum'\nudp='nmap -Pn -T4 -sS -sU -v -v -oA nmap-output/udp'\nscans = [ipc,all,svc,enm,vln,udp]\nsnames=[\"ippsec\",\"allports\",\"services\",\"vulns\", \"enum\", \"udp\"]",
        "detail": "furiousrecon",
        "documentation": {}
    },
    {
        "label": "scans",
        "kind": 5,
        "importPath": "furiousrecon",
        "description": "furiousrecon",
        "peekOfCode": "scans = [ipc,all,svc,enm,vln,udp]\nsnames=[\"ippsec\",\"allports\",\"services\",\"vulns\", \"enum\", \"udp\"]\ndef banner(): #Fancy banner for the tool\n    print(colored(\"\\nFuriousRecon - @n1c_Fury\", 'yellow', attrs=['bold']))\n    print(colored(\"Usage: ./recon.sh <ip> <name>\", 'blue'))\n    print(colored(\"github.com/n1cfury/FuriousRecon\\n\", 'yellow'))\ndef usage(): #Prints usage of the tool\n    print (colored(\"Usage: ./furiousrecon.sh <ip address> <target name>\", 'yellow'))\n    sys.exit()\ndef html_code():    #The HTML page for your report",
        "detail": "furiousrecon",
        "documentation": {}
    }
]